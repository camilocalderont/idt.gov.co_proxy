<?php

/**
 * @file
 * Installation hooks for csp.module.
 */

use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Implements hook_requirements().
 */
function csp_requirements(string $phase): array {
  $requirements = [];

  if ($phase === 'runtime') {
    $cspSettingsConfig = \Drupal::config('csp.settings');

    $enabledPolicies = array_filter(['report-only', 'enforce'], function ($policyTypeKey) use ($cspSettingsConfig) {
      return $cspSettingsConfig->get($policyTypeKey . '.enable');
    });
    if (empty($enabledPolicies)) {
      $requirements['csp_enabled'] = [
        'title' => 'Content Security Policy',
        'value' => t('No Content Security Policy headers are currently enabled.'),
        'description' => t(
          'Enable a header via <a href=":csp-settings">the Content Security Policy settings</a>.',
          [
            ':csp-settings' => \Drupal::urlGenerator()
              ->generateFromRoute('csp.settings'),
          ]
        ),
        'severity' => REQUIREMENT_WARNING,
      ];
    }

    // Warn if CSP is also enabled in Security Kit module configuration.
    if (
      \Drupal::moduleHandler()->moduleExists('seckit')
      &&
      \Drupal::config('seckit.settings')->get('seckit_xss.csp.checkbox')
    ) {
      $requirements['csp_seckit'] = [
        'title' => 'Content Security Policy - Security Kit',
        'value' => t('Enabling Content Security Policy in Security Kit is likely to cause policy conflicts.'),
        'description' => t(
          'Disable the Content Security Policy settings in <a href=":seckit-settings">Security Kit configuration</a>.',
          [
            ':seckit-settings' => \Drupal::urlGenerator()
              ->generateFromRoute('seckit.settings'),
          ]
        ),
        'severity' => REQUIREMENT_WARNING,
      ];
    }
  }

  return $requirements;
}

/**
 * Implements hook_update_last_removed().
 */
function csp_update_last_removed(): int {
  return 8103;
}

/**
 * Update policy if using removed sitelog reporting handler.
 */
function csp_update_20001(): ?TranslatableMarkup {
  $config = \Drupal::configFactory()->getEditable('csp.settings');

  $changed = FALSE;
  foreach (['enforce', 'report-only'] as $policyType) {
    if ($config->get($policyType . '.reporting.plugin') == 'sitelog') {
      $changed = TRUE;
      $config->set($policyType . '.reporting', [
        'plugin' => 'none',
      ]);
    }
  }

  $config->save(TRUE);

  if ($changed) {
    return t("The sitelog reporting handler has been removed - use the Reporting API module instead.");
  }
  return NULL;
}

/**
 * Update require-trusted-types-for config.
 */
function csp_update_20201(): void {
  $config = \Drupal::configFactory()->getEditable('csp.settings');

  foreach (['enforce', 'report-only'] as $policyType) {
    if ($config->get($policyType . '.directives.require-trusted-types-for')) {
      $config->set($policyType . '.directives.require-trusted-types-for', ['script']);
      $config->save(TRUE);
    }
  }
}
